# Music Generator
Study corpus of music, for find Markov chains and finally generate not-totally-random music.



## Transcription
_Objectives :_ get states of multiple musics, in readable format.
_Input :_ paths to wav files
_Output :_ a file where states are described in a FASTA-likeÂ format.
_Language :_ Matlab


## Extraction
_Objectives :_ Extract the probability of apparition of every musical note over 1Gram,2Gram and 3 Gram
_Input :_ path to the FASTA-like formatted file, and meta-data about output.
_Output :_ Array of meta data containing the probability.
_Language :_ Python (Matlab for the moment)

## Generation
_Objectives :_ generate music with the help of Meta data files.
_Input :_ Array of meta data.
_Output :_ FASTA-like formatted file that contain generated music, according to input meta-data. (number, size,...)
_Language :_ Python

## States
This is the way for represent music.   
In a first time, we use only name of notes (or number) without indications of tempo, rythms and octave.
As a music does not contain a lot of data only 3Gram analysis will be done.  



## FASTA-like format
Example of FASTA-like format :

    Au clair de la lune
    >sol sol sol la si la sol si la la sol
    Oh when the saints
    >sol si re do sol si re do sol si re do 
    si sol si la si si la sol sol si la re 
    re sol si si la sol si la si sol

Name of a sequence is always before the sequence itself. The name is on one only line, but sequence can be break in multiple lines.

